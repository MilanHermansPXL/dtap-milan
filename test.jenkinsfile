pipeline {
    agent any
    tools {
        nodejs 'testenvnode'  // Specificeer je Node.js omgeving
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')  // Haal de DockerHub inloggegevens op uit Jenkins credentials store
    }
    stages {
        stage('cleanup') {
            steps {
                deleteDir()  // Verwijder tijdelijke bestanden, als ze bestaan
            }
        }
        stage('Install dependencies') {
            steps {
                sh "npm install express"  // Installeer express afhankelijkheid
            }
        }
        stage('fetch app code') {
            steps {
                git branch: 'main', url: 'https://github.com/PXL-2TIN-DevOps-Resources/calculator-app-finished.git'  // Haal de code op uit de repository
            }
        }
        stage('Build artifact') {
            steps {
                sh 'docker build -t devops-pe/calculator-app:latest .'  // Bouw de Docker image en tag deze als 'latest'
            }
        }
        stage('Login to DockerHub') {
            steps {
                script {
                    // Gebruik 'withCredentials' om Docker Hub login gegevens veilig te verwerken
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKERHUB_PSW', usernameVariable: 'DOCKERHUB_USR')]) {
                        // Docker login met de credentials uit de Jenkins credentials store
                        sh 'echo $DOCKERHUB_PSW | docker login -u $DOCKERHUB_USR --password-stdin'
                    }
                }
            }
        }
        stage('Push Artifact to DockerHub') {
            steps {
                // Pusht de image naar de juiste repository (devops-pe)
                sh 'docker push devops-pe/calculator-app:latest'

            }
        }
    }
    post {
        always {
            sh 'docker logout'  // Zorg ervoor dat je uitlogt van DockerHub na elke run
        }
    }
}
