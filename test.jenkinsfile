pipeline {
    agent any
    tools {
        nodejs 'testenvnode'
    }
    stages {
        stage('cleanup') {
            steps {
                deleteDir()
            }
        }
        stage('Install dependencies') {
            steps {
                sh "npm install express"
            }
        }
        stage('fetch app code') {
            steps {
                git branch: 'main', url: 'https://github.com/PXL-2TIN-DevOps-Resources/calculator-app-finished.git'
            }
        }
        stage('Build artifact') {
            steps {
                sh 'docker build -t devops-pe/calculator-app:latest .'
            }
        }
        stage('Push Artifact') {
            steps {
                script {
                    echo 'Logging in to Docker Hub...'

                    // Docker login met credentials van Docker Hub
                    withCredentials([usernamePassword(credentialsId: 'docker', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                        // Inloggen in Docker Hub
                        sh "echo \$DOCKER_HUB_PASSWORD | docker login -u \$DOCKER_HUB_USERNAME --password-stdin"
                    }

                    echo "BUILD_ID is: ${BUILD_ID}"
                    echo 'Tagging and pushing Docker image...'

                    // Gebruik een expliciete tag als je niet zeker weet of BUILD_ID werkt
                    def imageTag = "\$DOCKER_HUB_USERNAME/calculator-app:${BUILD_ID ?: 'latest'}"

                    echo "Tagging image with: ${imageTag}"

                    // Tag de image correct
                    sh "docker tag devops-pe/calculator-app:latest ${imageTag}"

                    // Push de getagde image naar Docker Hub
                    sh "docker push ${imageTag}"
                }
            }
        }
    }
}
